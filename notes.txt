ML-Powered Index Tuning: An Overview of Recent Progress and Open Challenges
    https://arxiv.org/pdf/2308.13641

Determining size of indexes:
    https://stackoverflow.com/questions/781873/how-to-figure-out-size-of-indexes-in-mysql

databases:
    - TPC-H: tpch
    - JOB: job

tpch setup:
    ./dbgen -s 3 -f

https://dbgroup.cs.tsinghua.edu.cn/ligl/papers/tutorial-llm-meets-db.pdf
https://github.com/cfoh/Multi-Armed-Bandit-Example/tree/main/ucb

For query planner computations, perhaps remove top-five largest costs


Prompt Notes:
    - remove reference to "Human"
    - over more iterations, have context window for info being sent to critic. That is, only feed it the last k iterations worth of data


Policy prompts can suggest compound indexes, index datastructures, etc.

The main reason for query bandits is that it is not necessarily the case that multiple different queries can be stuffed into a prompt.
    - bandit reward: number of recommended indexes

Ideally, index size consumption should be a parameter of the reward function
    - However, the prompts themselves can be update to tell the agent to be mindful of memory consumption.

Have critic decide most impactful set of tables


To do:
    - Add bandit for policy selection
    - observation window truncation
    - use single reward/storage_scale metric
    - Tell the critic user prompt to explicitly maximize reward and minimize storage

tuning/run_2025-2-19_9_4
    - Best so far (10 epochs, basic frequency/hard coded gradient)
    - Also use in conjunction with prior run: tuning/run_2025-2-18_20_51

tuning/run_2025-2-19_17_14
    - Using Critic to produce weights for each column

tuning/run_2025-2-20_11_36
tuning/run_2025-2-20_15_52
    - Specifying storage budget