Included in this prompt are a series of proposed database table column index configurations, along with an associated reward and required storage size (in megabytes) of the indexes when deployed to the database. Your job is to evaluate the different candidate columns to be indexed and choose the columns that, when indexed, contribute most to maximizing the reward associated with the configuration. In addition, you must take into account the associated index storage size: the greater the storage size, the greater the costs when deploying the index configuration. Therefore, you must weigh the tradeoff between an increase in a reward and a increase in storage size.

Below is a list of columns that are being indexed, along with their datatypes and the space required (in megabytes) to store the column's index:

{schema}

Below is a list of column index configurations, along with the reward observed after the indexes are deployed and the associated storage size:

{configuration}

Output a list of columns from across the different proposed configurations that contribute most to maximizing the reward, while being mindful of the storage space required when these columns are indexed. {storage_budget}
Also, output a list of columns that should not be indexed. These columns either fail to contribute significantly to maximizing the reward or have too high storage space overhead.

```json
{{"columns_to_index": [<COLUMNS THAT SHOULD BE INDEXED>], "columns_not_to_index": [<COLUMNS THAT SHOULD NOT BE INDEXED>]}}
```